/*
 * This file is generated by jOOQ.
 */
package com.bfa.models.tables.daos;


import com.bfa.models.tables._Migration;
import com.bfa.models.tables.records._MigrationRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _MigrationDao extends DAOImpl<_MigrationRecord, com.bfa.models.tables.pojos._Migration, Integer> {

    /**
     * Create a new _MigrationDao without any configuration
     */
    public _MigrationDao() {
        super(_Migration._MIGRATION, com.bfa.models.tables.pojos._Migration.class);
    }

    /**
     * Create a new _MigrationDao with an attached configuration
     */
    public _MigrationDao(Configuration configuration) {
        super(_Migration._MIGRATION, com.bfa.models.tables.pojos._Migration.class, configuration);
    }

    @Override
    public Integer getId(com.bfa.models.tables.pojos._Migration object) {
        return object.getRevision();
    }

    /**
     * Fetch records that have <code>revision BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfRevision(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(_Migration._MIGRATION.REVISION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>revision IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByRevision(Integer... values) {
        return fetch(_Migration._MIGRATION.REVISION, values);
    }

    /**
     * Fetch a unique record that has <code>revision = value</code>
     */
    public com.bfa.models.tables.pojos._Migration fetchOneByRevision(Integer value) {
        return fetchOne(_Migration._MIGRATION.REVISION, value);
    }

    /**
     * Fetch a unique record that has <code>revision = value</code>
     */
    public Optional<com.bfa.models.tables.pojos._Migration> fetchOptionalByRevision(Integer value) {
        return fetchOptional(_Migration._MIGRATION.REVISION, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(_Migration._MIGRATION.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByName(String... values) {
        return fetch(_Migration._MIGRATION.NAME, values);
    }

    /**
     * Fetch records that have <code>datamodel BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfDatamodel(String lowerInclusive, String upperInclusive) {
        return fetchRange(_Migration._MIGRATION.DATAMODEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datamodel IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByDatamodel(String... values) {
        return fetch(_Migration._MIGRATION.DATAMODEL, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(_Migration._MIGRATION.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByStatus(String... values) {
        return fetch(_Migration._MIGRATION.STATUS, values);
    }

    /**
     * Fetch records that have <code>applied BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfApplied(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(_Migration._MIGRATION.APPLIED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>applied IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByApplied(Integer... values) {
        return fetch(_Migration._MIGRATION.APPLIED, values);
    }

    /**
     * Fetch records that have <code>rolled_back BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfRolledBack(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(_Migration._MIGRATION.ROLLED_BACK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rolled_back IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByRolledBack(Integer... values) {
        return fetch(_Migration._MIGRATION.ROLLED_BACK, values);
    }

    /**
     * Fetch records that have <code>datamodel_steps BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfDatamodelSteps(String lowerInclusive, String upperInclusive) {
        return fetchRange(_Migration._MIGRATION.DATAMODEL_STEPS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datamodel_steps IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByDatamodelSteps(String... values) {
        return fetch(_Migration._MIGRATION.DATAMODEL_STEPS, values);
    }

    /**
     * Fetch records that have <code>database_migration BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfDatabaseMigration(String lowerInclusive, String upperInclusive) {
        return fetchRange(_Migration._MIGRATION.DATABASE_MIGRATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>database_migration IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByDatabaseMigration(String... values) {
        return fetch(_Migration._MIGRATION.DATABASE_MIGRATION, values);
    }

    /**
     * Fetch records that have <code>errors BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfErrors(String lowerInclusive, String upperInclusive) {
        return fetchRange(_Migration._MIGRATION.ERRORS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>errors IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByErrors(String... values) {
        return fetch(_Migration._MIGRATION.ERRORS, values);
    }

    /**
     * Fetch records that have <code>started_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfStartedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(_Migration._MIGRATION.STARTED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>started_at IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByStartedAt(LocalDateTime... values) {
        return fetch(_Migration._MIGRATION.STARTED_AT, values);
    }

    /**
     * Fetch records that have <code>finished_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchRangeOfFinishedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(_Migration._MIGRATION.FINISHED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>finished_at IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos._Migration> fetchByFinishedAt(LocalDateTime... values) {
        return fetch(_Migration._MIGRATION.FINISHED_AT, values);
    }
}
