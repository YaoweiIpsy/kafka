/*
 * This file is generated by jOOQ.
 */
package com.bfa.models.tables.records;


import com.bfa.models.tables.Orderdetail;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderdetailRecord extends UpdatableRecordImpl<OrderdetailRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>next_graphql_admin.OrderDetail.googleMapsLocationId</code>.
     */
    public void setGooglemapslocationid(String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>next_graphql_admin.OrderDetail.googleMapsLocationId</code>.
     */
    public String getGooglemapslocationid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>next_graphql_admin.OrderDetail.id</code>.
     */
    public void setId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>next_graphql_admin.OrderDetail.id</code>.
     */
    public String getId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>next_graphql_admin.OrderDetail.userId</code>.
     */
    public void setUserid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>next_graphql_admin.OrderDetail.userId</code>.
     */
    public String getUserid() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Orderdetail.ORDERDETAIL.GOOGLEMAPSLOCATIONID;
    }

    @Override
    public Field<String> field2() {
        return Orderdetail.ORDERDETAIL.ID;
    }

    @Override
    public Field<String> field3() {
        return Orderdetail.ORDERDETAIL.USERID;
    }

    @Override
    public String component1() {
        return getGooglemapslocationid();
    }

    @Override
    public String component2() {
        return getId();
    }

    @Override
    public String component3() {
        return getUserid();
    }

    @Override
    public String value1() {
        return getGooglemapslocationid();
    }

    @Override
    public String value2() {
        return getId();
    }

    @Override
    public String value3() {
        return getUserid();
    }

    @Override
    public OrderdetailRecord value1(String value) {
        setGooglemapslocationid(value);
        return this;
    }

    @Override
    public OrderdetailRecord value2(String value) {
        setId(value);
        return this;
    }

    @Override
    public OrderdetailRecord value3(String value) {
        setUserid(value);
        return this;
    }

    @Override
    public OrderdetailRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderdetailRecord
     */
    public OrderdetailRecord() {
        super(Orderdetail.ORDERDETAIL);
    }

    /**
     * Create a detached, initialised OrderdetailRecord
     */
    public OrderdetailRecord(String googlemapslocationid, String id, String userid) {
        super(Orderdetail.ORDERDETAIL);

        setGooglemapslocationid(googlemapslocationid);
        setId(id);
        setUserid(userid);
    }

    /**
     * Create a detached, initialised OrderdetailRecord
     */
    public OrderdetailRecord(com.bfa.models.tables.pojos.Orderdetail value) {
        super(Orderdetail.ORDERDETAIL);

        if (value != null) {
            setGooglemapslocationid(value.getGooglemapslocationid());
            setId(value.getId());
            setUserid(value.getUserid());
        }
    }
}
