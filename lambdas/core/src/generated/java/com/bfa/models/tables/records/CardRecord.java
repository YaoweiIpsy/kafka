/*
 * This file is generated by jOOQ.
 */
package com.bfa.models.tables.records;


import com.bfa.models.tables.Card;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardRecord extends UpdatableRecordImpl<CardRecord> implements Record6<String, Integer, Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>next_graphql_admin.Card.brand</code>.
     */
    public void setBrand(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>next_graphql_admin.Card.brand</code>.
     */
    public String getBrand() {
        return (String) get(0);
    }

    /**
     * Setter for <code>next_graphql_admin.Card.expMonth</code>.
     */
    public void setExpmonth(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>next_graphql_admin.Card.expMonth</code>.
     */
    public Integer getExpmonth() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>next_graphql_admin.Card.expYear</code>.
     */
    public void setExpyear(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>next_graphql_admin.Card.expYear</code>.
     */
    public Integer getExpyear() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>next_graphql_admin.Card.id</code>.
     */
    public void setId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>next_graphql_admin.Card.id</code>.
     */
    public String getId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>next_graphql_admin.Card.last4Digits</code>.
     */
    public void setLast4digits(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>next_graphql_admin.Card.last4Digits</code>.
     */
    public String getLast4digits() {
        return (String) get(4);
    }

    /**
     * Setter for <code>next_graphql_admin.Card.stripePaymentMethodId</code>.
     */
    public void setStripepaymentmethodid(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>next_graphql_admin.Card.stripePaymentMethodId</code>.
     */
    public String getStripepaymentmethodid() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, Integer, Integer, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, Integer, Integer, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Card.CARD.BRAND;
    }

    @Override
    public Field<Integer> field2() {
        return Card.CARD.EXPMONTH;
    }

    @Override
    public Field<Integer> field3() {
        return Card.CARD.EXPYEAR;
    }

    @Override
    public Field<String> field4() {
        return Card.CARD.ID;
    }

    @Override
    public Field<String> field5() {
        return Card.CARD.LAST4DIGITS;
    }

    @Override
    public Field<String> field6() {
        return Card.CARD.STRIPEPAYMENTMETHODID;
    }

    @Override
    public String component1() {
        return getBrand();
    }

    @Override
    public Integer component2() {
        return getExpmonth();
    }

    @Override
    public Integer component3() {
        return getExpyear();
    }

    @Override
    public String component4() {
        return getId();
    }

    @Override
    public String component5() {
        return getLast4digits();
    }

    @Override
    public String component6() {
        return getStripepaymentmethodid();
    }

    @Override
    public String value1() {
        return getBrand();
    }

    @Override
    public Integer value2() {
        return getExpmonth();
    }

    @Override
    public Integer value3() {
        return getExpyear();
    }

    @Override
    public String value4() {
        return getId();
    }

    @Override
    public String value5() {
        return getLast4digits();
    }

    @Override
    public String value6() {
        return getStripepaymentmethodid();
    }

    @Override
    public CardRecord value1(String value) {
        setBrand(value);
        return this;
    }

    @Override
    public CardRecord value2(Integer value) {
        setExpmonth(value);
        return this;
    }

    @Override
    public CardRecord value3(Integer value) {
        setExpyear(value);
        return this;
    }

    @Override
    public CardRecord value4(String value) {
        setId(value);
        return this;
    }

    @Override
    public CardRecord value5(String value) {
        setLast4digits(value);
        return this;
    }

    @Override
    public CardRecord value6(String value) {
        setStripepaymentmethodid(value);
        return this;
    }

    @Override
    public CardRecord values(String value1, Integer value2, Integer value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardRecord
     */
    public CardRecord() {
        super(Card.CARD);
    }

    /**
     * Create a detached, initialised CardRecord
     */
    public CardRecord(String brand, Integer expmonth, Integer expyear, String id, String last4digits, String stripepaymentmethodid) {
        super(Card.CARD);

        setBrand(brand);
        setExpmonth(expmonth);
        setExpyear(expyear);
        setId(id);
        setLast4digits(last4digits);
        setStripepaymentmethodid(stripepaymentmethodid);
    }

    /**
     * Create a detached, initialised CardRecord
     */
    public CardRecord(com.bfa.models.tables.pojos.Card value) {
        super(Card.CARD);

        if (value != null) {
            setBrand(value.getBrand());
            setExpmonth(value.getExpmonth());
            setExpyear(value.getExpyear());
            setId(value.getId());
            setLast4digits(value.getLast4digits());
            setStripepaymentmethodid(value.getStripepaymentmethodid());
        }
    }
}
