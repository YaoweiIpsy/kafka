/*
 * This file is generated by jOOQ.
 */
package com.bfa.models.tables.daos;


import com.bfa.models.tables.Card;
import com.bfa.models.tables.records.CardRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardDao extends DAOImpl<CardRecord, com.bfa.models.tables.pojos.Card, String> {

    /**
     * Create a new CardDao without any configuration
     */
    public CardDao() {
        super(Card.CARD, com.bfa.models.tables.pojos.Card.class);
    }

    /**
     * Create a new CardDao with an attached configuration
     */
    public CardDao(Configuration configuration) {
        super(Card.CARD, com.bfa.models.tables.pojos.Card.class, configuration);
    }

    @Override
    public String getId(com.bfa.models.tables.pojos.Card object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>brand BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchRangeOfBrand(String lowerInclusive, String upperInclusive) {
        return fetchRange(Card.CARD.BRAND, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>brand IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchByBrand(String... values) {
        return fetch(Card.CARD.BRAND, values);
    }

    /**
     * Fetch records that have <code>expMonth BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchRangeOfExpmonth(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Card.CARD.EXPMONTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expMonth IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchByExpmonth(Integer... values) {
        return fetch(Card.CARD.EXPMONTH, values);
    }

    /**
     * Fetch records that have <code>expYear BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchRangeOfExpyear(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Card.CARD.EXPYEAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expYear IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchByExpyear(Integer... values) {
        return fetch(Card.CARD.EXPYEAR, values);
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Card.CARD.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchById(String... values) {
        return fetch(Card.CARD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bfa.models.tables.pojos.Card fetchOneById(String value) {
        return fetchOne(Card.CARD.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bfa.models.tables.pojos.Card> fetchOptionalById(String value) {
        return fetchOptional(Card.CARD.ID, value);
    }

    /**
     * Fetch records that have <code>last4Digits BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchRangeOfLast4digits(String lowerInclusive, String upperInclusive) {
        return fetchRange(Card.CARD.LAST4DIGITS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last4Digits IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchByLast4digits(String... values) {
        return fetch(Card.CARD.LAST4DIGITS, values);
    }

    /**
     * Fetch records that have <code>stripePaymentMethodId BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchRangeOfStripepaymentmethodid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Card.CARD.STRIPEPAYMENTMETHODID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>stripePaymentMethodId IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Card> fetchByStripepaymentmethodid(String... values) {
        return fetch(Card.CARD.STRIPEPAYMENTMETHODID, values);
    }
}
