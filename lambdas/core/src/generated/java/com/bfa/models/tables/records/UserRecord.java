/*
 * This file is generated by jOOQ.
 */
package com.bfa.models.tables.records;


import com.bfa.models.enums.UserRole;
import com.bfa.models.enums.UserStatus;
import com.bfa.models.tables.User;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record13<String, String, String, String, Byte, Byte, String, String, String, String, BigDecimal, UserRole, UserStatus> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>next_graphql_admin.User.billing</code>.
     */
    public void setBilling(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.billing</code>.
     */
    public String getBilling() {
        return (String) get(0);
    }

    /**
     * Setter for <code>next_graphql_admin.User.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>next_graphql_admin.User.emailConfirmationToken</code>.
     */
    public void setEmailconfirmationtoken(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.emailConfirmationToken</code>.
     */
    public String getEmailconfirmationtoken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>next_graphql_admin.User.googleId</code>.
     */
    public void setGoogleid(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.googleId</code>.
     */
    public String getGoogleid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>next_graphql_admin.User.hasCompletedOnboarding</code>.
     */
    public void setHascompletedonboarding(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.hasCompletedOnboarding</code>.
     */
    public Byte getHascompletedonboarding() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>next_graphql_admin.User.hasVerifiedEmail</code>.
     */
    public void setHasverifiedemail(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.hasVerifiedEmail</code>.
     */
    public Byte getHasverifiedemail() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>next_graphql_admin.User.id</code>.
     */
    public void setId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.id</code>.
     */
    public String getId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>next_graphql_admin.User.name</code>.
     */
    public void setName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.name</code>.
     */
    public String getName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>next_graphql_admin.User.password</code>.
     */
    public void setPassword(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.password</code>.
     */
    public String getPassword() {
        return (String) get(8);
    }

    /**
     * Setter for <code>next_graphql_admin.User.resetToken</code>.
     */
    public void setResettoken(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.resetToken</code>.
     */
    public String getResettoken() {
        return (String) get(9);
    }

    /**
     * Setter for <code>next_graphql_admin.User.resetTokenExpiry</code>.
     */
    public void setResettokenexpiry(BigDecimal value) {
        set(10, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.resetTokenExpiry</code>.
     */
    public BigDecimal getResettokenexpiry() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>next_graphql_admin.User.role</code>.
     */
    public void setRole(UserRole value) {
        set(11, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.role</code>.
     */
    public UserRole getRole() {
        return (UserRole) get(11);
    }

    /**
     * Setter for <code>next_graphql_admin.User.status</code>.
     */
    public void setStatus(UserStatus value) {
        set(12, value);
    }

    /**
     * Getter for <code>next_graphql_admin.User.status</code>.
     */
    public UserStatus getStatus() {
        return (UserStatus) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, String, String, String, Byte, Byte, String, String, String, String, BigDecimal, UserRole, UserStatus> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<String, String, String, String, Byte, Byte, String, String, String, String, BigDecimal, UserRole, UserStatus> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return User.USER.BILLING;
    }

    @Override
    public Field<String> field2() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return User.USER.EMAILCONFIRMATIONTOKEN;
    }

    @Override
    public Field<String> field4() {
        return User.USER.GOOGLEID;
    }

    @Override
    public Field<Byte> field5() {
        return User.USER.HASCOMPLETEDONBOARDING;
    }

    @Override
    public Field<Byte> field6() {
        return User.USER.HASVERIFIEDEMAIL;
    }

    @Override
    public Field<String> field7() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field8() {
        return User.USER.NAME;
    }

    @Override
    public Field<String> field9() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field10() {
        return User.USER.RESETTOKEN;
    }

    @Override
    public Field<BigDecimal> field11() {
        return User.USER.RESETTOKENEXPIRY;
    }

    @Override
    public Field<UserRole> field12() {
        return User.USER.ROLE;
    }

    @Override
    public Field<UserStatus> field13() {
        return User.USER.STATUS;
    }

    @Override
    public String component1() {
        return getBilling();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getEmailconfirmationtoken();
    }

    @Override
    public String component4() {
        return getGoogleid();
    }

    @Override
    public Byte component5() {
        return getHascompletedonboarding();
    }

    @Override
    public Byte component6() {
        return getHasverifiedemail();
    }

    @Override
    public String component7() {
        return getId();
    }

    @Override
    public String component8() {
        return getName();
    }

    @Override
    public String component9() {
        return getPassword();
    }

    @Override
    public String component10() {
        return getResettoken();
    }

    @Override
    public BigDecimal component11() {
        return getResettokenexpiry();
    }

    @Override
    public UserRole component12() {
        return getRole();
    }

    @Override
    public UserStatus component13() {
        return getStatus();
    }

    @Override
    public String value1() {
        return getBilling();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getEmailconfirmationtoken();
    }

    @Override
    public String value4() {
        return getGoogleid();
    }

    @Override
    public Byte value5() {
        return getHascompletedonboarding();
    }

    @Override
    public Byte value6() {
        return getHasverifiedemail();
    }

    @Override
    public String value7() {
        return getId();
    }

    @Override
    public String value8() {
        return getName();
    }

    @Override
    public String value9() {
        return getPassword();
    }

    @Override
    public String value10() {
        return getResettoken();
    }

    @Override
    public BigDecimal value11() {
        return getResettokenexpiry();
    }

    @Override
    public UserRole value12() {
        return getRole();
    }

    @Override
    public UserStatus value13() {
        return getStatus();
    }

    @Override
    public UserRecord value1(String value) {
        setBilling(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setEmailconfirmationtoken(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setGoogleid(value);
        return this;
    }

    @Override
    public UserRecord value5(Byte value) {
        setHascompletedonboarding(value);
        return this;
    }

    @Override
    public UserRecord value6(Byte value) {
        setHasverifiedemail(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value8(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value9(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value10(String value) {
        setResettoken(value);
        return this;
    }

    @Override
    public UserRecord value11(BigDecimal value) {
        setResettokenexpiry(value);
        return this;
    }

    @Override
    public UserRecord value12(UserRole value) {
        setRole(value);
        return this;
    }

    @Override
    public UserRecord value13(UserStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public UserRecord values(String value1, String value2, String value3, String value4, Byte value5, Byte value6, String value7, String value8, String value9, String value10, BigDecimal value11, UserRole value12, UserStatus value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(String billing, String email, String emailconfirmationtoken, String googleid, Byte hascompletedonboarding, Byte hasverifiedemail, String id, String name, String password, String resettoken, BigDecimal resettokenexpiry, UserRole role, UserStatus status) {
        super(User.USER);

        setBilling(billing);
        setEmail(email);
        setEmailconfirmationtoken(emailconfirmationtoken);
        setGoogleid(googleid);
        setHascompletedonboarding(hascompletedonboarding);
        setHasverifiedemail(hasverifiedemail);
        setId(id);
        setName(name);
        setPassword(password);
        setResettoken(resettoken);
        setResettokenexpiry(resettokenexpiry);
        setRole(role);
        setStatus(status);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(com.bfa.models.tables.pojos.User value) {
        super(User.USER);

        if (value != null) {
            setBilling(value.getBilling());
            setEmail(value.getEmail());
            setEmailconfirmationtoken(value.getEmailconfirmationtoken());
            setGoogleid(value.getGoogleid());
            setHascompletedonboarding(value.getHascompletedonboarding());
            setHasverifiedemail(value.getHasverifiedemail());
            setId(value.getId());
            setName(value.getName());
            setPassword(value.getPassword());
            setResettoken(value.getResettoken());
            setResettokenexpiry(value.getResettokenexpiry());
            setRole(value.getRole());
            setStatus(value.getStatus());
        }
    }
}
