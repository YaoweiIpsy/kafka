/*
 * This file is generated by jOOQ.
 */
package com.bfa.models.tables;


import com.bfa.models.Indexes;
import com.bfa.models.Keys;
import com.bfa.models.NextGraphqlAdmin;
import com.bfa.models.tables.records.OrderdetailRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Orderdetail extends TableImpl<OrderdetailRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>next_graphql_admin.OrderDetail</code>
     */
    public static final Orderdetail ORDERDETAIL = new Orderdetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderdetailRecord> getRecordType() {
        return OrderdetailRecord.class;
    }

    /**
     * The column
     * <code>next_graphql_admin.OrderDetail.googleMapsLocationId</code>.
     */
    public final TableField<OrderdetailRecord, String> GOOGLEMAPSLOCATIONID = createField(DSL.name("googleMapsLocationId"), SQLDataType.VARCHAR(191), this, "");

    /**
     * The column <code>next_graphql_admin.OrderDetail.id</code>.
     */
    public final TableField<OrderdetailRecord, String> ID = createField(DSL.name("id"), SQLDataType.VARCHAR(191).nullable(false), this, "");

    /**
     * The column <code>next_graphql_admin.OrderDetail.userId</code>.
     */
    public final TableField<OrderdetailRecord, String> USERID = createField(DSL.name("userId"), SQLDataType.VARCHAR(191), this, "");

    private Orderdetail(Name alias, Table<OrderdetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private Orderdetail(Name alias, Table<OrderdetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>next_graphql_admin.OrderDetail</code> table
     * reference
     */
    public Orderdetail(String alias) {
        this(DSL.name(alias), ORDERDETAIL);
    }

    /**
     * Create an aliased <code>next_graphql_admin.OrderDetail</code> table
     * reference
     */
    public Orderdetail(Name alias) {
        this(alias, ORDERDETAIL);
    }

    /**
     * Create a <code>next_graphql_admin.OrderDetail</code> table reference
     */
    public Orderdetail() {
        this(DSL.name("OrderDetail"), null);
    }

    public <O extends Record> Orderdetail(Table<O> child, ForeignKey<O, OrderdetailRecord> key) {
        super(child, key, ORDERDETAIL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : NextGraphqlAdmin.NEXT_GRAPHQL_ADMIN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.ORDERDETAIL_GOOGLEMAPSLOCATIONID, Indexes.ORDERDETAIL_USERID);
    }

    @Override
    public UniqueKey<OrderdetailRecord> getPrimaryKey() {
        return Keys.KEY_ORDERDETAIL_PRIMARY;
    }

    @Override
    public List<ForeignKey<OrderdetailRecord, ?>> getReferences() {
        return Arrays.asList(Keys.ORDERDETAIL_IBFK_2, Keys.ORDERDETAIL_IBFK_1);
    }

    private transient Googlemapslocation _googlemapslocation;
    private transient User _user;

    /**
     * Get the implicit join path to the
     * <code>next_graphql_admin.GoogleMapsLocation</code> table.
     */
    public Googlemapslocation googlemapslocation() {
        if (_googlemapslocation == null)
            _googlemapslocation = new Googlemapslocation(this, Keys.ORDERDETAIL_IBFK_2);

        return _googlemapslocation;
    }

    /**
     * Get the implicit join path to the <code>next_graphql_admin.User</code>
     * table.
     */
    public User user() {
        if (_user == null)
            _user = new User(this, Keys.ORDERDETAIL_IBFK_1);

        return _user;
    }

    @Override
    public Orderdetail as(String alias) {
        return new Orderdetail(DSL.name(alias), this);
    }

    @Override
    public Orderdetail as(Name alias) {
        return new Orderdetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Orderdetail rename(String name) {
        return new Orderdetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Orderdetail rename(Name name) {
        return new Orderdetail(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
