/*
 * This file is generated by jOOQ.
 */
package com.bfa.models.tables.daos;


import com.bfa.models.tables.Productimage;
import com.bfa.models.tables.records.ProductimageRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductimageDao extends DAOImpl<ProductimageRecord, com.bfa.models.tables.pojos.Productimage, String> {

    /**
     * Create a new ProductimageDao without any configuration
     */
    public ProductimageDao() {
        super(Productimage.PRODUCTIMAGE, com.bfa.models.tables.pojos.Productimage.class);
    }

    /**
     * Create a new ProductimageDao with an attached configuration
     */
    public ProductimageDao(Configuration configuration) {
        super(Productimage.PRODUCTIMAGE, com.bfa.models.tables.pojos.Productimage.class, configuration);
    }

    @Override
    public String getId(com.bfa.models.tables.pojos.Productimage object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>createdAt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchRangeOfCreatedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Productimage.PRODUCTIMAGE.CREATEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createdAt IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchByCreatedat(LocalDateTime... values) {
        return fetch(Productimage.PRODUCTIMAGE.CREATEDAT, values);
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Productimage.PRODUCTIMAGE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchById(String... values) {
        return fetch(Productimage.PRODUCTIMAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bfa.models.tables.pojos.Productimage fetchOneById(String value) {
        return fetchOne(Productimage.PRODUCTIMAGE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bfa.models.tables.pojos.Productimage> fetchOptionalById(String value) {
        return fetchOptional(Productimage.PRODUCTIMAGE.ID, value);
    }

    /**
     * Fetch records that have <code>image BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchRangeOfImage(String lowerInclusive, String upperInclusive) {
        return fetchRange(Productimage.PRODUCTIMAGE.IMAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>image IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchByImage(String... values) {
        return fetch(Productimage.PRODUCTIMAGE.IMAGE, values);
    }

    /**
     * Fetch records that have <code>productId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchRangeOfProductid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Productimage.PRODUCTIMAGE.PRODUCTID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>productId IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchByProductid(String... values) {
        return fetch(Productimage.PRODUCTIMAGE.PRODUCTID, values);
    }

    /**
     * Fetch records that have <code>updatedAt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchRangeOfUpdatedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Productimage.PRODUCTIMAGE.UPDATEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updatedAt IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Productimage> fetchByUpdatedat(LocalDateTime... values) {
        return fetch(Productimage.PRODUCTIMAGE.UPDATEDAT, values);
    }
}
