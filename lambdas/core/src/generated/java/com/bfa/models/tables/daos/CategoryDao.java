/*
 * This file is generated by jOOQ.
 */
package com.bfa.models.tables.daos;


import com.bfa.models.tables.Category;
import com.bfa.models.tables.records.CategoryRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryDao extends DAOImpl<CategoryRecord, com.bfa.models.tables.pojos.Category, String> {

    /**
     * Create a new CategoryDao without any configuration
     */
    public CategoryDao() {
        super(Category.CATEGORY, com.bfa.models.tables.pojos.Category.class);
    }

    /**
     * Create a new CategoryDao with an attached configuration
     */
    public CategoryDao(Configuration configuration) {
        super(Category.CATEGORY, com.bfa.models.tables.pojos.Category.class, configuration);
    }

    @Override
    public String getId(com.bfa.models.tables.pojos.Category object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>createdAt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchRangeOfCreatedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Category.CATEGORY.CREATEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createdAt IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchByCreatedat(LocalDateTime... values) {
        return fetch(Category.CATEGORY.CREATEDAT, values);
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchById(String... values) {
        return fetch(Category.CATEGORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bfa.models.tables.pojos.Category fetchOneById(String value) {
        return fetchOne(Category.CATEGORY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bfa.models.tables.pojos.Category> fetchOptionalById(String value) {
        return fetchOptional(Category.CATEGORY.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchByName(String... values) {
        return fetch(Category.CATEGORY.NAME, values);
    }

    /**
     * Fetch records that have <code>parent BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchRangeOfParent(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.PARENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parent IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchByParent(String... values) {
        return fetch(Category.CATEGORY.PARENT, values);
    }

    /**
     * Fetch records that have <code>slug BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchRangeOfSlug(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.SLUG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>slug IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchBySlug(String... values) {
        return fetch(Category.CATEGORY.SLUG, values);
    }

    /**
     * Fetch a unique record that has <code>slug = value</code>
     */
    public com.bfa.models.tables.pojos.Category fetchOneBySlug(String value) {
        return fetchOne(Category.CATEGORY.SLUG, value);
    }

    /**
     * Fetch a unique record that has <code>slug = value</code>
     */
    public Optional<com.bfa.models.tables.pojos.Category> fetchOptionalBySlug(String value) {
        return fetchOptional(Category.CATEGORY.SLUG, value);
    }

    /**
     * Fetch records that have <code>updatedAt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchRangeOfUpdatedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Category.CATEGORY.UPDATEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updatedAt IN (values)</code>
     */
    public List<com.bfa.models.tables.pojos.Category> fetchByUpdatedat(LocalDateTime... values) {
        return fetch(Category.CATEGORY.UPDATEDAT, values);
    }
}
