/*
 * This file is generated by jOOQ.
 */
package com.bfa.models.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _Migration implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       revision;
    private String        name;
    private String        datamodel;
    private String        status;
    private Integer       applied;
    private Integer       rolledBack;
    private String        datamodelSteps;
    private String        databaseMigration;
    private String        errors;
    private LocalDateTime startedAt;
    private LocalDateTime finishedAt;

    public _Migration() {}

    public _Migration(_Migration value) {
        this.revision = value.revision;
        this.name = value.name;
        this.datamodel = value.datamodel;
        this.status = value.status;
        this.applied = value.applied;
        this.rolledBack = value.rolledBack;
        this.datamodelSteps = value.datamodelSteps;
        this.databaseMigration = value.databaseMigration;
        this.errors = value.errors;
        this.startedAt = value.startedAt;
        this.finishedAt = value.finishedAt;
    }

    public _Migration(
        Integer       revision,
        String        name,
        String        datamodel,
        String        status,
        Integer       applied,
        Integer       rolledBack,
        String        datamodelSteps,
        String        databaseMigration,
        String        errors,
        LocalDateTime startedAt,
        LocalDateTime finishedAt
    ) {
        this.revision = revision;
        this.name = name;
        this.datamodel = datamodel;
        this.status = status;
        this.applied = applied;
        this.rolledBack = rolledBack;
        this.datamodelSteps = datamodelSteps;
        this.databaseMigration = databaseMigration;
        this.errors = errors;
        this.startedAt = startedAt;
        this.finishedAt = finishedAt;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.revision</code>.
     */
    public Integer getRevision() {
        return this.revision;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.revision</code>.
     */
    public void setRevision(Integer revision) {
        this.revision = revision;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.datamodel</code>.
     */
    public String getDatamodel() {
        return this.datamodel;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.datamodel</code>.
     */
    public void setDatamodel(String datamodel) {
        this.datamodel = datamodel;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.status</code>.
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.applied</code>.
     */
    public Integer getApplied() {
        return this.applied;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.applied</code>.
     */
    public void setApplied(Integer applied) {
        this.applied = applied;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.rolled_back</code>.
     */
    public Integer getRolledBack() {
        return this.rolledBack;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.rolled_back</code>.
     */
    public void setRolledBack(Integer rolledBack) {
        this.rolledBack = rolledBack;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.datamodel_steps</code>.
     */
    public String getDatamodelSteps() {
        return this.datamodelSteps;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.datamodel_steps</code>.
     */
    public void setDatamodelSteps(String datamodelSteps) {
        this.datamodelSteps = datamodelSteps;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.database_migration</code>.
     */
    public String getDatabaseMigration() {
        return this.databaseMigration;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.database_migration</code>.
     */
    public void setDatabaseMigration(String databaseMigration) {
        this.databaseMigration = databaseMigration;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.errors</code>.
     */
    public String getErrors() {
        return this.errors;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.errors</code>.
     */
    public void setErrors(String errors) {
        this.errors = errors;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.started_at</code>.
     */
    public LocalDateTime getStartedAt() {
        return this.startedAt;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.started_at</code>.
     */
    public void setStartedAt(LocalDateTime startedAt) {
        this.startedAt = startedAt;
    }

    /**
     * Getter for <code>next_graphql_admin._Migration.finished_at</code>.
     */
    public LocalDateTime getFinishedAt() {
        return this.finishedAt;
    }

    /**
     * Setter for <code>next_graphql_admin._Migration.finished_at</code>.
     */
    public void setFinishedAt(LocalDateTime finishedAt) {
        this.finishedAt = finishedAt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("_Migration (");

        sb.append(revision);
        sb.append(", ").append(name);
        sb.append(", ").append(datamodel);
        sb.append(", ").append(status);
        sb.append(", ").append(applied);
        sb.append(", ").append(rolledBack);
        sb.append(", ").append(datamodelSteps);
        sb.append(", ").append(databaseMigration);
        sb.append(", ").append(errors);
        sb.append(", ").append(startedAt);
        sb.append(", ").append(finishedAt);

        sb.append(")");
        return sb.toString();
    }
}
